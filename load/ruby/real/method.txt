!
!=
!~
<
<=
<=>
==
===
>
>=
Array
Complex
Float
Hash
Integer
Rational
String
__callee__
__dir__
__id__
__method__
__send__
`
abort
alias_method
allocate
ancestors
at_exit
attached_object
attr
attr_accessor
attr_reader
attr_writer
autoload
autoload?
binding
block_given?
caller
caller_locations
catch
class
class_eval
class_exec
class_variable_defined?
class_variable_get
class_variable_set
class_variables
clone
const_added
const_defined?
const_get
const_missing
const_set
const_source_location
constants
define_method
define_singleton_method
deprecate_constant
display
dup
enum_for
eql?
equal?
eval
exec
exit
exit!
extend
extended
fail
fork
format
freeze
frozen?
gem
gem_original_require
gets
global_variables
hash
include
include?
included
included_modules
inherited
initialize
initialize_clone
initialize_copy
initialize_dup
inspect
instance_eval
instance_exec
instance_method
instance_methods
instance_of?
instance_variable_defined?
instance_variable_get
instance_variable_set
instance_variables
is_a?
iterator?
itself
kind_of?
lambda
load
local_variables
loop
method
method_added
method_defined?
method_missing
method_removed
method_undefined
methods
module_eval
module_exec
name
nesting
new
nil?
object_id
open
p
pp
prepend
prepended
print
printf
private
private_class_method
private_constant
private_instance_methods
private_method_defined?
private_methods
proc
protected
protected_instance_methods
protected_method_defined?
protected_methods
public
public_class_method
public_constant
public_instance_method
public_instance_methods
public_method
public_method_defined?
public_methods
public_send
putc
puts
raise
rand
readline
readlines
refinements
remove_class_variable
remove_const
remove_instance_variable
remove_method
require
require_relative
respond_to?
respond_to_missing?
ruby2_keywords
select
send
set_temporary_name
set_trace_func
singleton_class
singleton_class?
singleton_method
singleton_method_added
singleton_method_removed
singleton_method_undefined
singleton_methods
sleep
spawn
sprintf
srand
subclasses
superclass
syscall
system
tap
test
then
throw
to_enum
to_s
trace_var
trap
undef_method
undefined_instance_methods
untrace_var
used_modules
used_refinements
using
warn
yield_self
