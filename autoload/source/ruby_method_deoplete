nesting
used_modules
constants
new
allocate
superclass
<=>
<=
>=
==
===
included_modules
include?
name
ancestors
attr
attr_reader
attr_writer
attr_accessor
instance_methods
public_instance_methods
protected_instance_methods
private_instance_methods
const_get
const_set
const_defined?
class_variables
remove_class_variable
class_variable_get
class_variable_set
class_variable_defined?
public_constant
freeze
inspect
deprecate_constant
private_constant
const_missing
singleton_class?
include
prepend
module_eval
remove_method
class_eval
<
alias_method
>
public_method_defined?
module_exec
class_exec
undef_method
private_method_defined?
public_class_method
to_s
method_defined?
protected_method_defined?
private_class_method
instance_method
public_instance_method
define_method
autoload
autoload?
instance_variable_set
instance_variable_defined?
remove_instance_variable
instance_of?
kind_of?
is_a?
tap
instance_variable_get
singleton_method
method
public_method
define_singleton_method
public_send
extend
pp
to_enum
enum_for
=~
!~
eql?
respond_to?
object_id
send
display
nil?
hash
class
singleton_class
clone
dup
itself
yield_self
taint
tainted?
untaint
untrust
untrusted?
trust
frozen?
methods
singleton_methods
protected_methods
private_methods
public_methods
instance_variables
!
equal?
instance_eval
instance_exec
!=
__id__
__send__

